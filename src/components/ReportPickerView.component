<!-- 

Copyright (c) 2013, salesforce.com, Inc. All rights reserved.

Redistribution and use in source and binary forms, with or without modification, 
are permitted provided that the following conditions are met:

    * Redistributions of source code must retain the above copyright notice, 
    this list of conditions and the following disclaimer.
    * Redistributions in binary form must reproduce the above copyright notice, 
    this list of conditions and the following disclaimer in the documentation 
    and/or other materials provided with the distribution.
    * Neither the name of the salesforce.com, Inc. nor the names of its contributors 
    may be used to endorse or promote products derived from this software 
    without specific prior written permission.

THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND 
ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED 
WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. 
IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, 
INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, 
BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, 
DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF 
LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE 
OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED 
OF THE POSSIBILITY OF SUCH DAMAGE.

-->

<apex:component >

<!-- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -->

<script type="x-template" id="ReportPickerViewTemplate">
    <h1>Pick A Report</h1>
    <div class="reportMissing">
        <a href="#" class="showReportMissing">Is your report missing from this list?</a>
    </div>
    <div class="reportMissingText">
        <p>
            MyCharts supports only certain report types - specifically those
            which are based on only one object type. Reports based on more than
            one object (e.g. Accounts and Contacts) are not supported.
        </p>
        <p>
            Among supported report types, only matrix and summary format reports
            are supported.
        </p>
        <p>
            MyCharts requires that you include the "Record Count"
            field in any report you wish to use with it.
        </p>
        <p>
            Custom formulas are not supported. Reports that contain custom
            formulas can be used, but the custom formulas will not be
            available in the chart.
        </p>
        <a href="#" class="hideReportMissing">hide</a>
    </div>
    <ul></ul>
    <img class="reportLoadingIcon"
     src="{!URLFOR($Resource.MyChartsZip, '/images/loading-white.gif')}" />
</script>

<!-- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -->

<style>

.reportPickerView {
    overflow-x: hidden;
    overflow-y: scroll;
    min-height: 300px;
    text-align: center;
    background-color: #f0f1f2;
}
.desktop .reportPickerView {
    max-height: 600px;
}

.reportPickerView h1 {
    background: -webkit-linear-gradient(bottom, #33495f 0%, #23394d 100%);
    background: -moz-linear-gradient(bottom, #33495f 0%, #23394d 100%);
    background: -ms-linear-gradient(bottom, #33495f 0%, #23394d 100%);
    background: linear-gradient(bottom, #33495f 0%, #23394d 100%);
    filter: progid:DXImageTransform.Microsoft.gradient(GradientType=0,startColorstr='#33495f', endColorstr='#23394d');/*For IE7-8-9*/
    margin: 0px;
    text-align: left;
    font-size: 32px;
    font-weight: normal;
    color: #fff;
    padding: 14px;
}

.reportMissing {
    margin-top: 10px;
}

.reportMissingText {
    display: none;
    padding-left: 20px;
    padding-right: 20px;
    padding-top: 10px;
}

.reportMissingText p {
    text-align: left;
}

.reportMissingText a {
    text-align: center;
}

.reportPickerView ul {
    border: none;
    margin:0;
    overflow: visible;
    background-color: #f0f1f2;
    text-align: left;
}

.reportPickerView li {
    list-style-type: none;
    line-height: 56px;
    font-size:20px;
    padding-left:14px;
    border: none;
    border-bottom: 1px solid #bbc0c4;
    cursor: pointer;
    color: #3c3d3e;
    white-space: nowrap;
    text-overflow: ellipsis;
    overflow: hidden;
    display: block;
    width: auto;
}

.reportPickerView .reportLoadingIcon {
    position: relative;
    top: 80px;
}

.reportPickerView .reportPickerError {
    position: relative;
    top: 100px;
    font-size: 20px;
}

@media (max-device-width: 568px) {

    .reportPickerView h1 {
        font-size: 18pt;
        font-weight: lighter;
    }

    /* Stupid stupid hack for iOS. Without this, despite any sort of
       text-overflow rules, these divs end up becoming wider than the screen
       and making all the parents up the chain too wide as well. */
    .reportPickerView li {
        max-width: 300px;
    }

}

</style>

<!-- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -->

<script>
;(function() {
    var MyCharts = window.MyCharts = window.MyCharts || {};

    MyCharts.ReportPickerView = Marionette.ItemView.extend({
        className: 'reportPickerView',
        template: '#ReportPickerViewTemplate',
        events: {
            'click ul li': '_click',
            'mousedown ul li': '_mousedown',
            'mousemove ul li': '_mousemove',
            'mouseup ul li': '_mouseup',
            'click .showReportMissing': '_showReportMissingInfo',
            'click .hideReportMissing': '_hideReportMissingInfo'
        },

        /*****************************************************************/

        initialize: function(params) {
            this._params = params;
            this._didScroll = false;
            this._mouseIsDown = false;
            this._reports = [ ];
            if (MyCharts.isMobile())
                this.$el.addClass('mobile');
        },

        /*****************************************************************/

        onRender: function() {
            var self = this;
            var client = this._params.clientFactory();

            var myReportQuery = "SELECT Id,Name FROM Report " +
                "WHERE Format != 'Tabular' " +
                "AND OwnerId = '{!$User.ID}' " +
                "ORDER BY LastRunDate DESC NULLS LAST " +
                "LIMIT 100";

            var pubReportQuery = "SELECT Id,Name FROM Report " +
                "WHERE Format != 'Tabular' " +
                "AND OwnerId = '{!$Organization.Id}' " +
                "ORDER BY LastRunDate DESC NULLS LAST " +
                "LIMIT 100";
            
            var numResults = 0, numErrors = 0;

            function displayResults() {
                if (numResults == 2 || numResults == 1 && numErrors == 1) {
                    self.$('.reportLoadingIcon').hide();
                    if (self._reports.length > 0) {                        
                        var $ul = self.$('ul');
                        for (var i = 0; i < self._reports.length; ++i) {
                            $ul.append(
                                $('<li>').text(self._reports[i].Name));
                        }
                    }
                    else
                        noReports();
                }
                else if (numErrors == 2) {
                    self.$('.reportLoadingIcon').hide();
                    self.$el.append($('<div>Error loading reports</div>')
                                    .addClass('reportPickerError'));
                }
            }

            function noReports() {
                self.$el.append($('<div>No reports available</div>')
                                .addClass('reportPickerError'));
            }

            function myReportsReturned(resp) {
                numResults++;
                if (resp && resp.records && resp.records.length > 0)
                    _.each(resp.records.reverse(), function(x) {
                        self._reports.unshift(x);
                    });
                displayResults();
            }

            function pubReportsReturned(resp) {
                numResults++;
                if (resp && resp.records && resp.records.length > 0)
                    _.each(resp.records, function(x) {
                        self._reports.push(x);
                    });
                displayResults();
            }

            function reportError() {
                numErrors++;
                displayResults();
            }
                            

            client.query(myReportQuery, myReportsReturned, reportError);
            client.query(pubReportQuery, pubReportsReturned, reportError);
        },

        /*****************************************************************/
        // Event handlers

        _click: function() {
            return false;
        },

        _mousedown: function() {
            this._didScroll = false;
            this._mouseIsDown = true;
            return false;
        },

        _mousemove: function() {
            if (this._mouseIsDown)
                this._didScroll = true;
            return false;
        },

        _mouseup: function(e) {
            this._mouseIsDown = false;
            if (!this._didScroll)
                this.trigger('reportSelected',
                             this._reports[$(e.currentTarget).index()].Id);
            return false;
        },

        _showReportMissingInfo: function(e) {
            this.$('.reportMissing').css('display', 'none');
            this.$('.reportMissingText').css('display', 'block');
        },

        _hideReportMissingInfo: function(e) {
            this.$('.reportMissing').css('display', 'block');
            this.$('.reportMissingText').css('display', 'none');
        }

    });
})();
</script>

<!-- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -->

</apex:component>